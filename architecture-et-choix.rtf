{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww37900\viewh19680\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs48 \cf0 Architecture du projet:\
\
Mon syst\'e8me de d\'92authentification et de session repose sur next, qui peut organiser les apis en \'ab\'a0route api\'a0\'bb au sein du dossier /pages.\
Ma page login a donc son pages/api/login.ts et idem pour signup.\
\
Lors de l\'92inscription, les donn\'e9es de l\'92utilisateur sont partiellement hach\'e9es puis envoy\'e9es sur ma base de donn\'e9es mySQL. Une fois inscris, le composant login permet de v\'e9rifier si les donn\'e9es correspondent \'e0 un compte et g\'e9n\'e8re un JWT stock\'e9 dans un cookie. Pour commencer le projet, j\'92ai d\'e9cid\'e9 de retenir seulement l\'92username.\
Les JWT dans les cookies \'e9vitent de solliciter trop souvent la base de donn\'e9es et permet une meilleure fluidit\'e9. Cependant, il ne servent pas \'e0 stocker des donn\'e9es sensibles.}